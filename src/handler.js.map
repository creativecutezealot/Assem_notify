{"version":3,"sources":["webpack:///webpack/bootstrap 41938c738e9faa878e26","webpack:///external \"source-map-support/register\"","webpack:///external \"ramda\"","webpack:///./src/handler.js","webpack:///./src/utils/db-client.js","webpack:///external \"aws-sdk\"","webpack:///./src/utils/notification.js","webpack:///external \"apn\""],"names":["TBLNAME_INDEX","findParam","TableName","TBLNAME","IndexName","KeyConditionExpression","FilterExpression","ExpressionAttributeValues","items","onGetItems","resultFind","getItems","Items","push","console","log","length","LastEvaluatedKey","ExclusiveStartKey","error","JSON","stringify","getAssembles","getEvents","userIds","keyParams","Keys","idx","userId","keyParam","batchParams","batchGETParams","res","batchGetItem","getUsers","assemble_id","value","keyModel","expression","updateParam","Key","UpdateExpression","ReturnValues","updateRes","updateItem","updateAssembleSendNoti","event_id","updateEventSendNoti","updateAssembleNotifyUsers","updateEventNotifyUsers","users","data","isAssemble","filtered_users","filter","r","call_token","index","sendVoipNotification","broadVoipPushNotification","event","context","callback","time","assembles","events","assemble","send_notification","startTimeStamp","Date","start_time","getTime","curTimeStamp","notify_users","Array","isArray","event_time","timeEnd","message","e","toString","scrap","module","exports","action","params","gParams","startsWith","prefixTableName4Batch","prefixTableName4Normal","db","promise","dbClient","R","require","AWS","DynamoDB","DocumentClient","region","mapKeys","curry","fn","obj","reduce","acc","key","keys","RequestItems","tableName","SaveChartTblName","resources","user","notification","apn","Notification","alert","assemble_name","event_name","callName","getDisplayName","enter_club_name","rawPayload","uuid","handle","user_id","callerName","aps","contentAvailable","priority","topic","bundle_id","sendRes","apnService","send","apnOption","token","process","env","P8KEY","keyId","P8KEYID","teamId","TEAMID","production","Provider","text","frontSign","replace","trim"],"mappings":"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","file":"src/handler.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 41938c738e9faa878e26","module.exports = require(\"source-map-support/register\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"source-map-support/register\"\n// module id = 0\n// module chunks = 0","module.exports = require(\"ramda\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ramda\"\n// module id = 1\n// module chunks = 0","import R from 'ramda';\nimport dbClient from 'utils/db-client';\nimport notiManager from 'utils/notification';\n\nconst TBLNAME = \"FutureOF\";\n\nasync function getAssembles() {\n  try {\n    const TBLNAME_INDEX = \"table_name-index\";\n    const findParam = {\n      TableName: TBLNAME,\n      IndexName: TBLNAME_INDEX,\n      KeyConditionExpression: \"table_name = :table_name\",\n      FilterExpression: \"send_notification = :send_notification\",\n      ExpressionAttributeValues: {\n        \":table_name\": \"ASSEMBLEY\",\n        \":send_notification\": false\n      }\n    };\n    let items = [];\n    const onGetItems = async () => {\n      const resultFind = await dbClient.getItems(findParam);\n      if (resultFind.Items) {\n        items.push(...resultFind.Items);\n        console.log('resultFind', resultFind.Items.length);\n      }\n      if (resultFind.LastEvaluatedKey) {\n        findParam.ExclusiveStartKey = resultFind.LastEvaluatedKey;\n        await onGetItems();\n      }\n    }\n    await onGetItems();\n    return items;\n  } catch (error) {\n    console.log('get assembles error', JSON.stringify(error));\n    return [];\n  }\n}\n\nasync function getEvents() {\n  try {\n    const TBLNAME_INDEX = \"table_name-index\";\n    const findParam = {\n      TableName: TBLNAME,\n      IndexName: TBLNAME_INDEX,\n      KeyConditionExpression: \"table_name = :table_name\",\n      FilterExpression: \"send_notification = :send_notification\",\n      ExpressionAttributeValues: {\n        \":table_name\": \"EVENT\",\n        \":send_notification\": false\n      }\n    };\n    let items = [];\n    const onGetItems = async () => {\n      const resultFind = await dbClient.getItems(findParam);\n      if (resultFind.Items) {\n        items.push(...resultFind.Items);\n        console.log('resultFind', resultFind.Items.length);\n      }\n      if (resultFind.LastEvaluatedKey) {\n        findParam.ExclusiveStartKey = resultFind.LastEvaluatedKey;\n        await onGetItems();\n      }\n    }\n    await onGetItems();\n    return items;\n  } catch (error) {\n    console.log('get assembles error', JSON.stringify(error));\n    return [];\n  }\n}\n\nasync function getUsers(userIds) {\n  const keyParams = { Keys: [] }\n  for (const idx in userIds) {\n    const userId = userIds[idx];\n    const keyParam = {};\n    keyParam[\"pri_key\"] = `USER#${userId}`;\n    keyParam[\"sort_key\"] = `#METADATA#USER#${userId}`;\n    keyParams.Keys.push(keyParam);\n  }\n  const batchParams = dbClient.batchGETParams(TBLNAME, keyParams);\n  const res = await dbClient.batchGetItem(batchParams);\n  if (res['Responses']) {\n    return res['Responses'][TBLNAME];\n  } else {\n    return [];\n  }\n}\n\nasync function updateAssembleSendNoti(assemble_id, value) {\n  try {\n    const keyModel = {\n      \"pri_key\": `ASSEMBLEY#${assemble_id}`,\n      \"sort_key\": `#METADATA#ASSEMBLEY#${assemble_id}`\n    };\n    const expression = `set send_notification = :send_noti`;\n    const updateParam = {\n      TableName: TBLNAME,\n      Key: keyModel,\n      UpdateExpression: expression,\n      ExpressionAttributeValues: {\n        \":send_noti\": value\n      },\n      ReturnValues: \"ALL_NEW\"\n    };\n    const updateRes = await dbClient.updateItem(updateParam);\n    return true;\n  } catch (error) {\n    console.log(\"UPDATE ERROR ==>\", error);\n    return false;\n  }\n}\n\nasync function updateEventSendNoti(event_id, value) {\n  try {\n    const keyModel = {\n      \"pri_key\": `EVENT#${event_id}`,\n      \"sort_key\": `#METADATA#EVENT#${event_id}`\n    };\n    const expression = `set send_notification = :send_noti`;\n    const updateParam = {\n      TableName: TBLNAME,\n      Key: keyModel,\n      UpdateExpression: expression,\n      ExpressionAttributeValues: {\n        \":send_noti\": value\n      },\n      ReturnValues: \"ALL_NEW\"\n    };\n    const updateRes = await dbClient.updateItem(updateParam);\n    return true;\n  } catch (error) {\n    console.log(\"UPDATE ERROR ==>\", error);\n    return false;\n  }\n}\n\nasync function updateAssembleNotifyUsers(assemble_id, value) {\n  try {\n    const keyModel = {\n      \"pri_key\": `ASSEMBLEY#${assemble_id}`,\n      \"sort_key\": `#METADATA#ASSEMBLEY#${assemble_id}`\n    };\n    const expression = `set notify_users = :noti_users`;\n    const updateParam = {\n      TableName: TBLNAME,\n      Key: keyModel,\n      UpdateExpression: expression,\n      ExpressionAttributeValues: {\n        \":noti_users\": value\n      },\n      ReturnValues: \"ALL_NEW\"\n    };\n    const updateRes = await dbClient.updateItem(updateParam);\n    return true;\n  } catch (error) {\n    console.log(\"UPDATE ERROR ==>\", JSON.stringify(error));\n    return false;\n  }\n}\n\nasync function updateEventNotifyUsers(event_id, value) {\n  try {\n    const keyModel = {\n      \"pri_key\": `EVENT#${event_id}`,\n      \"sort_key\": `#METADATA#EVENT#${event_id}`\n    };\n    const expression = `set notify_users = :noti_users`;\n    const updateParam = {\n      TableName: TBLNAME,\n      Key: keyModel,\n      UpdateExpression: expression,\n      ExpressionAttributeValues: {\n        \":noti_users\": value\n      },\n      ReturnValues: \"ALL_NEW\"\n    };\n    const updateRes = await dbClient.updateItem(updateParam);\n    return true;\n  } catch (error) {\n    console.log(\"UPDATE ERROR ==>\", JSON.stringify(error));\n    return false;\n  }\n}\n\nasync function broadVoipPushNotification(users, data, isAssemble) {\n  const filtered_users = users.filter(r => r.call_token && r.call_token !== \"\")\n  for (const index in filtered_users) {\n    await notiManager.sendVoipNotification(data, filtered_users[index], isAssemble);\n  }\n}\n\nasync function scrap(event, context, callback) {\n  try {\n    console.time('How long it will take');\n    const assembles = await getAssembles();\n    const events = await getEvents();\n    for (const index in assembles) {\n      const assemble = assembles[index];\n      if (!assemble.send_notification) {\n        const startTimeStamp = new Date(assemble.start_time).getTime() / 1000;\n        const curTimeStamp = new Date().getTime() / 1000;\n        console.log('time stamp', startTimeStamp, curTimeStamp);\n        if (startTimeStamp <= curTimeStamp) {\n          await updateAssembleSendNoti(assemble.assemble_id, true);\n          if (assemble.notify_users && Array.isArray(assemble.notify_users)) {\n            const users = await getUsers(assemble.notify_users);\n            if (users.length > 0) {\n              console.log('users', users.length);\n              await broadVoipPushNotification(users, assemble, true);\n              await updateAssembleNotifyUsers(assemble.assemble_id, []);\n            }\n          }\n        }\n      }\n    }\n    for (const index in events) {\n      const event = events[index];\n      if (!event.send_notification) {\n        const startTimeStamp = new Date(event.event_time).getTime() / 1000;\n        const curTimeStamp = new Date().getTime() / 1000;\n        console.log('time stamp', startTimeStamp, curTimeStamp);\n        if (startTimeStamp <= curTimeStamp) {\n          await updateEventSendNoti(event.event_id, true);\n          if (event.notify_users && Array.isArray(event.notify_users)) {\n            const users = await getUsers(event.notify_users);\n            if (users.length > 0) {\n              console.log('users', users.length);\n              await broadVoipPushNotification(users, assemble, false);\n              await updateEventNotifyUsers(event.event_id, []);\n            }\n          }\n        }\n      }\n    }\n    console.timeEnd('How long it will take');\n    callback(null, { message: `Successfully wrote to database` });\n  } catch (e) {\n    callback(e.toString());\n  }\n}\n\nexport default {\n  scrap\n};\nmodule.exports = {\n  scrap\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/handler.js","var R = require('ramda');\nvar AWS = require('aws-sdk');\nvar db = new AWS.DynamoDB.DocumentClient({\n  region: \"us-east-1\"\n});\nvar mapKeys = R.curry((fn, obj) => R.reduce((acc, key) => {\n  acc[fn(key)] = obj[key];\n  return acc;\n}, {}, R.keys(obj)));\n\nvar prefixTableName4Normal = params => ({ ...params, TableName: `${params.TableName}` });\nvar prefixTableName4Batch = params => ({\n  ...params,\n  RequestItems: mapKeys(tableName => `${tableName}`, params.RequestItems)\n});\nconst SaveChartTblName = 'savechart_record';\nasync function dbClient(action, params) {\n  var gParams = action.startsWith('batch')\n    ? prefixTableName4Batch(params)\n    : prefixTableName4Normal(params);\n  return db[action](gParams).promise();\n};\nasync function getItems(params) {\n  try {\n    return dbClient('query', params);\n  } catch (error) {\n    console.error('Get Items dbClient');\n    console.error(error.toString());\n  }\n}\n\nasync function updateItem(updateParam) {\n  try {\n    return dbClient('update', updateParam);\n  } catch (error) {\n    console.error('Update Item error dbClient');\n    console.error(error.toString());\n  }\n}\n\nasync function batchGetItem(params) {\n  try {\n    return dbClient('batchGet', params);\n  } catch (error) {\n    console.error('Get Items dbClient');\n    console.error(error.toString());\n  }\n}\n\nfunction batchGETParams(TableName, resources) {\n  const params = { RequestItems: {} };\n  params.RequestItems[TableName] = resources\n  return params;\n};\n\nmodule.exports = {\n  dbClient,\n  getItems,\n  updateItem,\n  batchGetItem,\n  batchGETParams\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/db-client.js","module.exports = require(\"aws-sdk\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"aws-sdk\"\n// module id = 4\n// module chunks = 0","var apn = require('apn');\nconst bundle_id = \"com.futureof.ios\";\nconst apnOption = {\n    token: {\n        key: process.env.P8KEY,\n        keyId: process.env.P8KEYID,\n        teamId: process.env.TEAMID,\n    },\n    production: true\n};\n\nconst apnService = new apn.Provider(apnOption);\n\nconst getDisplayName = (text, frontSign = \"@\") => {\n    if (text && text != \"\") {\n        return `${frontSign}${text.replace(/\\s/g, '').trim()}`\n    }\n    return \"\";\n}\n\nasync function sendVoipNotification(data, user, isAssemble) {\n    let notification = new apn.Notification();\n    notification.alert = isAssemble ? data.assemble_name : data.event_name;\n    let callName = isAssemble ? `${getDisplayName(data.enter_club_name, \"#\")} Assembly \"${data.assemble_name}\"` : `${getDisplayName(data.enter_club_name, \"#\")} Event \"${data.event_name}\"`\n    notification.rawPayload = {\n        uuid: isAssemble ? data.assemble_id : data.event_id,\n        handle: user.user_id,\n        callerName: callName,\n        aps: {\n            \"content-available\": 1,\n            \"apns-push-type\": \"background\",\n        }\n    }\n    notification.contentAvailable = 1;\n    notification.priority = 10;\n    notification.topic = `${bundle_id}.voip`;\n    try {\n        const sendRes = await apnService.send(notification, [user.call_token]);\n        console.log(\"send voip notification\", JSON.stringify(sendRes));\n        return true;\n    } catch (error) {\n        console.log(\"send voip notification error\", JSON.stringify(error));\n        return false;\n    }\n}\n\nmodule.exports = {\n    sendVoipNotification\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/notification.js","module.exports = require(\"apn\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"apn\"\n// module id = 6\n// module chunks = 0"],"sourceRoot":""}